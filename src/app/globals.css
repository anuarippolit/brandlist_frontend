@import url('https://fonts.googleapis.com/css2?family=Bangers&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* Add Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,wght@0,400;1,400&family=Poppins:wght@900&display=swap');

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

/* Utility Font Classes */
.font-poppins {
  font-family: 'Poppins', sans-serif;
}

.font-inter {
  font-family: 'Inter', sans-serif;
}

.font-bangers {
  font-family: 'Bangers', cursive;
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
}

/* SECOND LINE (with caret, starts immediately) */
.reverse-typewriter-second {
  display: inline-block;
  white-space: nowrap;
  overflow: hidden;
  border-right: 0.15em solid #6f00ff;
  animation: reverse-typing 2.8s steps(40, end) 2s forwards,
    hide-caret 0s ease 4.8s forwards;
}

@keyframes marquee {
  0% {
    transform: translateX(-50%);
  }
  100% {
    transform: translateX(0%);
  }
}

.animate-marquee {
  animation: marquee 4s linear infinite;
}

.scroll-hide {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none; /* Firefox */
}
.scroll-hide::-webkit-scrollbar {
  display: none; /* Chrome, Safari */
}

@keyframes slide-right-started-left {
  0% {
    transform: translateX(-50%);
  }
  100% {
    transform: translateX(0%);
  }
}

.animate-slide-right-started-left {
  animation: slide-right-started-left 10s linear infinite;
}

@keyframes slide-left {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-50%);
  }
}

.animate-slide-left {
  animation: slide-left 10s linear infinite;
}

@keyframes gallery {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-50%);
  }
}

.animate-gallery {
  animation: gallery 30s linear infinite;
}
